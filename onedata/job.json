{
    "parameters":{ 
        "input_onedata_token": "MDAxNWxvY2F00aW9uIG9uZXpvbmUKMDAzYmlkZW500aWZpZXIgQ3B1MUJUUE44ZklTdUQ00X00Nla1RMNFo2SzJ5eFctdTJVN19fTExNN1o5cwowMDFhY2lkIHRpbWUgPCAxNTA3NzA3Njg2CjAwMmZzaWduYXR1cmUgq5345Ty3vqGbvE57Iodzx00cnPyDbIjuH01pJm00DUYmScK",
        "output_onedata_token": "MDAxNWxvY2F00aW9uIG9uZXpvbmUKMDAzYmlkZW500aWZpZXIgQ3B1MUJUUE44ZklTdUQ00X00Nla1RMNFo2SzJ5eFctdTJVN19fTExNN1o5cwowMDFhY2lkIHRpbWUgPCAxNTA3NzA3Njg2CjAwMmZzaWduYXR1cmUgq5345Ty3vqGbvE57Iodzx00cnPyDbIjuH01pJm00DUYmScK",
        "input_onedata_space": "sample",
        "input_onedata_providers": "cdmi-indigo.recas.ba.infn.it",
        "output_onedata_providers": "cdmi-indigo.recas.ba.infn.it",
        "input_path": "input",
        "output_onedata_space": "sample",
        "output_path": "first",
        "output_filenames": "output.tgz",
        "cpus": 1,
        "mem": "1024 MB"
     
    },
    "template": "tosca_definitions_version: tosca_simple_yaml_1_0\n\nimports:\n - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml\n\ndescription: >\n TOSCA examples for specifying a Chronos Job that runs an application using Onedata storage.\n\ntopology_template:\n  inputs:\n\n    input_onedata_token:\n      type: string\n      description: User token required to mount the user's INPUT Onedata space\n      required: yes\n    \n    output_onedata_token:\n      type: string\n      description: User token required to mount the user's OUTPUT Onedata space. It can be the same as the input token\n      required: yes\n    \n    input_onedata_providers:\n      type: string\n      description: csv list of favorite Onedata providers to be used to mount the Input Onedata space. If not provided, data locality algo will be applied.\n      default: ''\n      required: no\n    \n    output_onedata_providers:\n      type: string\n      description: csv list of favorite Onedata providers to be used to mount the Output Onedata space. If not provided, the same provider(s) used to mount the input space will be used.\n      default: ''\n      required: no\n    \n    input_onedata_space:\n      type: string\n      description: Onedata space where the application input data are stored\n      required: yes\n    \n    input_path:\n      type: string\n      description: Path to the input data inside the Input Onedata space\n      required: yes\n    \n    output_onedata_space:\n      type: string\n      description: Onedata space where the application output will be stored. It can be the same as the Input Onedata space\n      required: yes\n \n \n    output_filenames:\n      type: string\n      description: csv list of filenames generated by the application run\n      default: ''\n      required: yes\n    \n    cpus:\n      type: float\n      description: Amount of CPUs for this job\n      required: yes\n    \n    mem:\n      type: scalar-unit.size\n      description: Amount of Memory for this job\n      required: yes \n  \n\n  node_templates:\n \n   \n    chronos_job1:\n      type: tosca.nodes.indigo.Container.Application.Docker.Chronos\n      properties:\n        schedule: 'R0/2015-12-25T17:22:00Z/PT1M'\n        description: 'Execute Application'\n        command: 'cd $MESOS_SANDBOX && wget https://raw.githubusercontent.com/maricaantonacci/e-RSH/master/scripts/Lifewatch/lifewatch_run.sh && /bin/bash lifewatch_run.sh'\n        uris: []\n        retries: 3\n        environment_variables:\n          TEMP: '3'\n          INPUT_ONEDATA_TOKEN: { get_input: input_onedata_token }\n          OUTPUT_ONEDATA_TOKEN: { get_input: output_onedata_token }\n          INPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }\n          OUTPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }\n          INPUT_ONEDATA_SPACE: { get_input: input_onedata_space }\n          INPUT_PATH: { get_input: input_path }\n          OUTPUT_ONEDATA_SPACE: { get_input: output_onedata_space }\n          OUTPUT_PATH: 'first/model1'\n          OUTPUT_FILENAMES: { get_input: output_filenames }\n      artifacts:\n        image:\n          file: 'marica/barridocker-oneclient' \n          type: tosca.artifacts.Deployment.Image.Container.Docker\n      requirements:\n        - host: docker_runtime\n   \n    chronos_job2:\n      type: tosca.nodes.indigo.Container.Application.Docker.Chronos\n      properties:\n        schedule: 'R0/2015-12-25T17:22:00Z/PT1M'\n        description: 'Execute Application'\n        command: 'cd $MESOS_SANDBOX && wget https://raw.githubusercontent.com/maricaantonacci/e-RSH/master/scripts/Lifewatch/lifewatch_run.sh && /bin/bash lifewatch_run.sh'\n        uris: []\n        retries: 3\n        environment_variables:\n          TEMP: '0.05'\n          INPUT_ONEDATA_TOKEN: { get_input: input_onedata_token }\n          OUTPUT_ONEDATA_TOKEN: { get_input: output_onedata_token }\n          INPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }\n          OUTPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }\n          INPUT_ONEDATA_SPACE: { get_input: input_onedata_space }\n          INPUT_PATH: { get_input: input_path }\n          OUTPUT_ONEDATA_SPACE: { get_input: output_onedata_space }\n          OUTPUT_PATH: 'first/model2'\n          OUTPUT_FILENAMES: { get_input: output_filenames }\n      artifacts:\n        image:\n          file: 'marica/barridocker-oneclient' \n          type: tosca.artifacts.Deployment.Image.Container.Docker\n      requirements:\n        - host: docker_runtime\n      \n    chronos_job3:\n      type: tosca.nodes.indigo.Container.Application.Docker.Chronos\n      properties:\n        schedule: 'R0/2015-12-25T17:22:00Z/PT1M'\n        description: 'Execute Application'\n        command: 'cd $MESOS_SANDBOX && wget https://raw.githubusercontent.com/maricaantonacci/e-RSH/master/scripts/Lifewatch/lifewatch_run.sh && /bin/bash lifewatch_run.sh'\n        uris: []\n        retries: 3\n        environment_variables:\n          TEMP: '5'\n          INPUT_ONEDATA_TOKEN: { get_input: input_onedata_token }\n          OUTPUT_ONEDATA_TOKEN: { get_input: output_onedata_token }\n          INPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }\n          OUTPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }\n          INPUT_ONEDATA_SPACE: { get_input: input_onedata_space }\n          INPUT_PATH: { get_input: input_path }\n          OUTPUT_ONEDATA_SPACE: { get_input: output_onedata_space }\n          OUTPUT_PATH: 'first/model3'\n          OUTPUT_FILENAMES: { get_input: output_filenames }\n      artifacts:\n        image:\n          file: 'marica/barridocker-oneclient' \n          type: tosca.artifacts.Deployment.Image.Container.Docker\n      requirements:\n        - host: docker_runtime\n   \n   \n    docker_runtime:\n      type: tosca.nodes.indigo.Container.Runtime.Docker\n      capabilities:\n        host:\n          properties:\n            num_cpus: { get_input: cpus }\n            mem_size: { get_input: mem }\n\n"
}
